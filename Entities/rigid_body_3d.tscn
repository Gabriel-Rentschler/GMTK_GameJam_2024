[gd_scene load_steps=7 format=3 uid="uid://mmfqdi0nln7q"]

[ext_resource type="Script" path="res://Scripts/Resizer.gd" id="2_6dl71"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_kn1q6"]
friction = 0.0

[sub_resource type="GDScript" id="GDScript_64ocr"]
script/source = "extends RigidBody3D

@onready var eyes = $Head/Camera
@onready var head = $Head
@onready var body = $Body
@onready var feet = $Feet

@export var jump_velocity = 10
@export var acceleration = 1
var accel_multiplier = 0.1
@export var speed = 25
@export var max_speed = 50
@export var stop_speed = 0.2
var velocity=Vector3()

var mouse_input = Vector2()
@export var view_sensitivity = 10.0
var is_on_floor = false
var move_input

func _ready():
	linear_damp = 1.0
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func _physics_process(delta):
	#reset friction to zero to avoid sticking to walk when velocity is applied
	#if  friction >= 0: friction = 0
	is_on_floor = false
	move_input = Vector2.ZERO
	var dir = Vector3()
	#movement input
	move_input = Input.get_vector(\"left\",\"right\",\"backward\",\"forward\")
	dir += move_input.x*head.global_transform.basis.x;
	dir -= move_input.y*head.global_transform.basis.z;
	velocity = lerp(velocity,dir*speed,acceleration*accel_multiplier*delta)
	apply_central_force(velocity)
	if feet.is_colliding():
		is_on_floor = true
		#friction = 1.0
		#accel_multiplier = 1.0
	if Input.is_action_just_pressed(\"jump\") and is_on_floor:
		accel_multiplier = 0.1
		is_on_floor = false
		apply_central_impulse(Vector3.UP * jump_velocity)
	#view and rotation
	eyes.rotation_degrees.x -= mouse_input.y * view_sensitivity * delta;
	eyes.rotation_degrees.x = clamp(eyes.rotation_degrees.x,-80,80)
	head.rotation_degrees.y -= mouse_input.x * view_sensitivity * delta;
	mouse_input = Vector2.ZERO
	

func _integrate_forces(state):
	#limit max speed
	if state.linear_velocity.length()>max_speed:
		state.linear_velocity=state.linear_velocity.normalized()*max_speed
	#artificial stopping movement i.e not using physics
	if move_input.length() < 0.2:
		state.linear_velocity.x = lerp(state.linear_velocity.x,0.0,stop_speed)
		state.linear_velocity.z = lerp(state.linear_velocity.z,0.0,stop_speed)
	#push against floor to avoid sliding on \"unreasonable\" slopes
	if state.get_contact_count() > 0 and move_input.length()< 0.2:
		if is_on_floor and state.get_contact_local_normal(0).y < 0.9:
			apply_central_force(-state.get_contact_local_normal(0)*10)

#mouse input
func _input(event):
	if event is InputEventMouseMotion:
		mouse_input = event.relative;
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_rqdi7"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_grnpw"]

[sub_resource type="BoxMesh" id="BoxMesh_ddwfw"]

[node name="RigidBody3D" type="RigidBody3D"]
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
physics_material_override = SubResource("PhysicsMaterial_kn1q6")
script = SubResource("GDScript_64ocr")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_rqdi7")

[node name="Body" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_grnpw")

[node name="Gun" type="MeshInstance3D" parent="."]
transform = Transform3D(0.3, 0, 0, 0, 0.3, 0, 0, 0, 0.3, 0.374535, 0.19178, -0.755202)
mesh = SubResource("BoxMesh_ddwfw")
script = ExtResource("2_6dl71")

[node name="Head" type="Node3D" parent="."]

[node name="Camera" type="Camera3D" parent="Head"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.671625, -0.252883)

[node name="GunRay" type="RayCast3D" parent="Head/Camera"]
unique_name_in_owner = true
transform = Transform3D(0.3, 0, 0, 0, 0.3, 0, 0, 0, 0.3, 0.374535, -0.479845, -0.717019)
target_position = Vector3(0, 0, -20)
collision_mask = 2

[node name="Feet" type="RayCast3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.02971, 0)
